name: Temperature Manager Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: "22"
  PNPM_VERSION: "10"

jobs:
  quality-and-tests:
    name: Quality & Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [quality, unit-tests, e2e-tests]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Installing dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        if: matrix.task == 'quality'
        run: pnpm lint

      - name: Check code formatting
        if: matrix.task == 'quality'
        run: pnpm format:check

      - name: Run unit tests with coverage
        if: matrix.task == 'unit-tests'
        run: pnpm test:coverage

      - name: Upload coverage reports
        if: matrix.task == 'unit-tests'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Install Playwright browsers
        if: matrix.task == 'e2e-tests'
        run: pnpm exec playwright install --with-deps

      - name: Build application for E2E
        if: matrix.task == 'e2e-tests'
        run: pnpm build

      - name: Run E2E tests
        if: matrix.task == 'e2e-tests'
        run: pnpm test:e2e

      - name: Upload E2E test results
        if: matrix.task == 'e2e-tests' && always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 2

  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: quality-and-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Installing dependencies
        run: pnpm install --frozen-lockfile

      - name: Building application
        run: pnpm build

      - name: Add .nojekyll file
        run: touch ./dist/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
